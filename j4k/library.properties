# UTF-8 supported.

# The name of your library as you want it formatted
name = J4K Java For Kinect

# List of authors. Links can be provided using the syntax [author name](url)
authorList = [Angelos Barmpoutis](http://www.digitalworlds.ufl.edu/angelos)

# A web page for your library, NOT a direct link to where to download it
url = http://research.dwi.ufl.edu/ufdw/j4k

# The category of your library, must be one (or many) of the following:
#   "3D"            "Animation"     "Compilations"      "Data"          
#   "Fabrication"   "Geometry"      "GUI"               "Hardware"      
#   "I/O"           "Language"      "Math"              "Simulation"    
#   "Sound"         "Utilities"     "Typography"        "Video & Vision"  
# 
# If a value other than those listed is used, your library will listed as "Other."
category = "Video & Vision"

# A short sentence (or fragment) to summarize the library's function. This will be
# shown from inside the PDE when the library is being installed. Avoid repeating
# the name of your library here. Also, avoid saying anything redundant like
# mentioning that its a library. This should start with a capitalized letter, and
# end with a period.
sentence = Java binding to the Microsoft Kinect SDK.

# Additional information suitable for the Processing website. The value of
# 'sentence' always will be prepended, so you should start by writing the
# second sentence here. If your library only works on certain operating systems,
# mention it here.
paragraph =  The J4K library is an open source Java library that implements a Java binding (wrapper) for the Microsoft's Kinect SDK. You can use it to create your own Java applications that handle the video, depth, and skeleton streams of the Kinect sensor.  Furthermore, the J4K library contains several Java classes that convert the packed depth frames, skeleton frames, and video frames received by a Kinect sensor into easy-to-use Java objects. There are also convenient methods to save the data in open file formats such as VRML.

# Links in the 'sentence' and 'paragraph' attributes can be inserted using the
# same syntax as for authors. That is, [here is a link to Processing](http://processing.org/)


# A version number that increments once with each release. This
# is used to compare different versions of the same library, and
# check if an update is available. You should think of it as a
# counter, counting the total number of releases you've had.
version = 1  # This must be parsable as an int

# The version as the user will see it. If blank, the version attribute will be used here
prettyVersion = 1.00  # This is treated as a String